{"version":3,"file":"component---src-pages-swap-confirmed-js.js","mappings":"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","sources":["webpack://gatsby-starter-medusa/./src/components/utility/seo.jsx","webpack://gatsby-starter-medusa/./src/pages/swap-confirmed.js"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nfunction SearchEngineOptimization({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSearchEngineOptimization.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSearchEngineOptimization.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SearchEngineOptimization\n","import React, { useEffect, useState } from \"react\"\nimport SearchEngineOptimization from \"../components/utility/seo\"\n\nconst OrderConfirmed = ({ location }) => {\n  const [success, setSuccess] = useState(false)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const getOrder = async () => {\n      const state = location.state\n      const success = state?.success\n\n      if (success) {\n        setSuccess(success)\n      }\n      setLoading(false)\n    }\n\n    getOrder()\n  }, [location.state])\n\n  return !loading && success ? (\n    <div className=\"layout-base flex justify-center pb-16\">\n      <SearchEngineOptimization title=\"Order Confirmed\" />\n      <div className=\"max-w-xl\">\n        <span className=\"text-xs font-medium mb-2\">THANK YOU</span>\n        <h1>Exchange Completed</h1>\n        <p className=\"text-md font-light mt-3\">\n          Your exchange was successfully processed. You will receive an email\n          with the tracking number of your parcel once itâ€™s avaliable.\n        </p>\n      </div>\n    </div>\n  ) : (\n    <div className=\"layout-base\">\n      <div className=\"flex justify-center items-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default OrderConfirmed\n"],"names":["PropTypes","React","Helmet","SearchEngineOptimization","description","lang","meta","title","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","concat","defaultProps","propTypes","string","arrayOf","object","isRequired","useEffect","useState","OrderConfirmed","location","success","setSuccess","loading","setLoading","getOrder","state"],"sourceRoot":""}